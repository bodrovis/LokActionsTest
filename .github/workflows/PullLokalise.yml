name: Demo pull with tags

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Pull from Lokalise
        id: lokalise-pull
        uses: lokalise/lokalise-pull-action@v3.4.0
        with:
          api_token: ${{ secrets.LOKALISE_API_TOKEN }}
          project_id: 5868381966b39e5053ff15.63486389
          translations_path: |
            locales
            i18n
          base_lang: en
          file_format: json_structured
          file_ext: json
          additional_params: "--indentation 2sp --placeholder-format icu"
          always_pull_base: false
          flat_naming: true
          # skip_include_tags: true
          pr_labels: 'automerge,sample'
          # skip_original_filenames: true
 
      - name: Debug Created Branch
        run: |
          echo "Branch created: ${{ steps.lokalise-pull.outputs.created_branch }}"
          echo "PR created: ${{ steps.lokalise-pull.outputs.pr_created }}"
          echo "PR id: ${{ steps.lokalise-pull.outputs.pr_id }}"
          echo "PR number: ${{ steps.lokalise-pull.outputs.pr_number }}"
      
      # - name: Trigger Automerge Workflow
      #   if: steps.lokalise-pull.outputs.created_branch != '' && steps.lokalise-pull.outputs.pr_created == 'true'
      #   uses: actions/github-script@v7
      #   with:
      #     github-token: ${{ secrets.PAT_TOKEN }}
      #     script: |
      #       await github.rest.actions.createWorkflowDispatch({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         workflow_id: "automerge.yml",
      #         ref: "${{ steps.lokalise-pull.outputs.created_branch }}",
      #       });
  
      # - name: Inspect Pull Requests
      #   run: gh pr list --state open --json number,headRefName,labels,baseRefName,title
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: List All PRs with Merge Status
      #   run: gh pr list --state open --json number,mergeable,mergeStateStatus,headRefName,baseRefName,labels,title
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}