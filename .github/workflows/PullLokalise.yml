name: Demo pull with tags

on:
  workflow_dispatch:
  pull_request:
    branches: [master]
    # types: [opened, synchronize, reopened, ready_for_review]
    
permissions:
  contents: write
  pull-requests: write
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # - name: Check Python
      #   run: |
      #     which python
      #     python --version
          
      - name: Pull from Lokalise
        id: lokalise-pull
        uses: lokalise/lokalise-pull-action@handle_on_pr_trigger
        with:
          api_token: ${{ secrets.LOKALISE_API_TOKEN }}
          project_id: 5868381966b39e5053ff15.63486389
          translations_path: messages
          flat_naming: true
          file_format: json
          file_ext: json
          # pr_draft: true
          # pr_assignees: bodrovis
          # async_mode: true
          skip_include_tags: true
          # additional_params: ""
          # additional_params: >
          #   {
          #     "include_tags": ["release-2025-08-19"]
          #   }
          post_process_command: "python scripts/replace_test.py"
          # post_process_strict: true
          # additional_params: >
          #   {
          #     "indentation": "2sp",
          #     "export_empty_as": "skip",
          #     "export_sort": "a_z",
          #     "replace_breaks": false,
          #     "language_mapping": [
          #       {"original_language_iso": "fr", "custom_language_iso": "fr-FR"}
          #     ]
          #   }


          # base_lang: en
          # file_format: json
          # # file_ext: json
          # # additional_params: |
          # #   --directory-prefix=%LANG_ISO%
          # #   --indentation=4sp
          # #   --json-unescaped-slashes=true
          # #   --export-empty-as=skip
          # #   --export-sort=a_z
          # #   --replace-breaks=false
          # #   --language-mapping=[{"original_language_iso":"en_US","custom_language_iso":"en-US"}]
          # always_pull_base: true
          # flat_naming: true
          # skip_include_tags: true
          # pr_labels: 'automerge,sample'
          # # skip_original_filenames: true
          # # async_mode: true
          # # override_branch_name: 'custom_branch'
          # # force_push: true
 
      - name: Debug Created Branch
        run: |
          echo "Branch used:   ${{ steps.lokalise-pull.outputs.created_branch }}"
          echo "PR exists:     ${{ steps.lokalise-pull.outputs.pr_exists }}"
          echo "PR created:    ${{ steps.lokalise-pull.outputs.pr_created }}"
          echo "PR updated:    ${{ steps.lokalise-pull.outputs.pr_updated }}"
          echo "PR action:     ${{ steps.lokalise-pull.outputs.pr_action }}"
          echo "PR number:     ${{ steps.lokalise-pull.outputs.pr_number }}"
          echo "PR id:         ${{ steps.lokalise-pull.outputs.pr_id }}"
          echo "PR url:        ${{ steps.lokalise-pull.outputs.pr_url }}"
      
      # - name: Trigger Automerge Workflow
      #   if: steps.lokalise-pull.outputs.created_branch != '' && steps.lokalise-pull.outputs.pr_created == 'true'
      #   uses: actions/github-script@v7
      #   with:
      #     github-token: ${{ secrets.PAT_TOKEN }}
      #     script: |
      #       await github.rest.actions.createWorkflowDispatch({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         workflow_id: "automerge.yml",
      #         ref: "${{ steps.lokalise-pull.outputs.created_branch }}",
      #       });
  
      # - name: Inspect Pull Requests
      #   run: gh pr list --state open --json number,headRefName,labels,baseRefName,title
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: List All PRs with Merge Status
      #   run: gh pr list --state open --json number,mergeable,mergeStateStatus,headRefName,baseRefName,labels,title
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}